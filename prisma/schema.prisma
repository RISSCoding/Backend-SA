generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum LeaveType {
  PERMISSION
  SICK
  HOLIDAY
  OFFICEDUTY
  WFH
}

enum LeaveStatus {
  PENDING
  APPROVED
  REJECTED
}

model Account {
  userID      Int      @id @default(autoincrement())
  name        String
  email       String   @unique
  password    String
  phone       String?  
  position    String?
  division    String?
  facePhoto   String?
  role        String   @default("USER")
  isApproved  Boolean  @default(false)   
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  presences   Presence[] 
  leaveRequests LeaveRequest[]
}



model Schedule {
  id        Int      @id @default(autoincrement())
  date      DateTime
  startTime DateTime
  endTime   DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  presences Presence[] 
}

model Presence {
  id              Int      @id @default(autoincrement())
  checkInTime     DateTime?
  checkOutTime    DateTime?                                                                                                                                                                                                                                                                                                     
  checkInPhoto    String?
  checkOutPhoto   String?
  checkInLocation String?  // Lokasi check-in (misalnya "Latitude, Longitude")
  checkOutLocation String? // Lokasi check-out (misalnya "Latitude, Longitude")
  status          String   @default("Present")
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  userID          Int
  scheduleID      Int      // Foreign key ke Schedule
  Account         Account  @relation(fields: [userID], references: [userID])
  Schedule        Schedule @relation(fields: [scheduleID], references: [id]) // Relasi ke Schedule
}

model LeaveRequest {
  id          Int         @id @default(autoincrement())
  userId      Int
  user        Account     @relation(fields: [userId], references: [userID])
  type        LeaveType
  startDate   DateTime
  endDate     DateTime
  reason      String
  status      LeaveStatus @default(PENDING)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}